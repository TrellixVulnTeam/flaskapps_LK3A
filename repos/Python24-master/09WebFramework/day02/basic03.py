"""
    静态url:一般html结尾的都是静态的url，每个网页有真实的物理路径，存在服务器中
        优点：对seo有加分影响，因为打开速度快
        缺点：太多的静态网页，占用硬盘空间

    动态url：类似php,asp,py等结尾的，或者带有？id=5类似的url，动态生成的url，每个url只是逻辑地址，并不是真正存在服务器中的
        优点：修改网页方便，因为是逻辑地址，所以占用硬盘空间少
        缺点：因为需要运算，所以打开速度稍慢

    伪静态url：xxx/coure/95.html看起来是一个静态的url，但是并不存在真实的物理地址在服务器中
        优点和缺点：处于静态url和动态url之间，是一个折中的方案
"""

"""
    dynamic文件夹下存在隐藏的__pycache__文件夹，里面是pyc格式的文件，保存的是已经翻译好的被导入模块的二进制代码
    python解释器把python程序编译为二进制供机器运行
    
    无论导入的方式是from xxx还是import XXX，那么这个模块引入的时候都会被从头到尾执行一遍
    使用if __name__ == '__main__':
    
    当一个模块main.py导入了test.py那么test.py会被从头到尾执行一遍，只要执行，那么就需要解释器翻译为二进制
    如果main.py中导入了大量的其他模块，那么python解释器需要大量的解释和翻译，根据实际情况，如果test.py如果没有被修改过
    那么下一次被导入的时候，依然会被解释器花时间和资源进行翻译，为了提高下一次导入的效率，python解释器在第一次导入一个模块时
    它会将翻译之后的字节码，保存在__pacache__文件夹下以test.py --> test.cpython-35.pyc(cpython表示c语言的python解释器， 35表示python3.5的解释器)
    当下一次导入这个模块的时候，会先到__pycache__文件夹下寻找对应的文件名，如果找到了，根据一定的条件，判断是否需要重新翻译，加快了翻译速度
"""
if __name__ == '__main__':
    pass