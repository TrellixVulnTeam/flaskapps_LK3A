worker_processes auto;
pid /tmp/nginx.pid;
daemon off;

events {
    worker_connections 1024; 
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    include /etc/nginx/workers.conf;
    default_type  application/octet-stream;

    access_log off;
    error_log off;
    
    sendfile on;
    keepalive_timeout 15;
    keepalive_disable msie6;
    keepalive_requests 100;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;

    client_body_temp_path /tmp/client_body 1 2;
    proxy_temp_path /tmp/proxy 1 2;
    
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 512;
    gzip_buffers 4 8k;
    gzip_proxied any;
    gzip_vary on;
    gzip_disable "msie6";
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/vnd.ms-fontobject
        font/truetype
        font/opentype
        image/svg+xml;

    server {
        listen 8000;
        server_name _;

        set_real_ip_from   0.0.0.0/0;
        real_ip_header     X-Forwarded-For;

        location / {
            proxy_set_header   X-FORWARDED_PROTO @HTTP_SCHEME@;
            proxy_set_header   Host              $http_host;
            proxy_set_header   X-Forwarded-For   $remote_addr;

            proxy_read_timeout 300;

            proxy_next_upstream     error timeout invalid_header http_500;
            proxy_connect_timeout 2;

            proxy_pass http://127.0.0.1:5000;
        }

        location /socket.io {
            proxy_set_header   X-FORWARDED_PROTO @HTTP_SCHEME@;
            proxy_set_header   Host              $http_host;
            proxy_set_header   X-Forwarded-For   $remote_addr;

            proxy_read_timeout 300;

            proxy_next_upstream     error timeout invalid_header http_500;
            proxy_connect_timeout 2;

            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://socketio_nodes/socket.io;
        }
    }
}
