import os
from urllib.parse import urlsplit

#                                 .i;;;;i.
#                               iYcviii;vXY:
#                             .YXi       .i1c.
#                            .YC.     .    in7.
#                           .vc.   ......   ;1c.
#                           i7,   ..        .;1;
#                          i7,   .. ...      .Y1i
#                         ,7v     .6MMM@;     .YX,
#                        .7;.   ..IMMMMMM1     :t7.
#                       .;Y.     ;$MMMMMM9.     :tc.
#                       vY.   .. .nMMM@MMU.      ;1v.
#                      i7i   ...  .#MM@M@C. .....:71i
#                     it:   ....   $MMM@9;.,i;;;i,;tti
#                    :t7.  .....   0MMMWv.,iii:::,,;St.
#                   .nC.   .....   IMMMQ..,::::::,.,czX.
#                  .ct:   ....... .ZMMMI..,:::::::,,:76Y.
#                  c2:   ......,i..Y$M@t..:::::::,,..inZY
#                 vov   ......:ii..c$MBc..,,,,,,,,,,..iI9i
#                i9Y   ......iii:..7@MA,..,,,,,,,,,....;AA:
#               iIS.  ......:ii::..;@MI....,............;Ez.
#              .I9.  ......:i::::...8M1..................C0z.
#             .z9;  ......:i::::,.. .i:...................zWX.
#             vbv  ......,i::::,,.      ................. :AQY
#            c6Y.  .,...,::::,,..:t0@@QY. ................ :8bi
#           :6S. ..,,...,:::,,,..EMMMMMMI. ............... .;bZ,
#          :6o,  .,,,,..:::,,,..i#MMMMMM#v.................  YW2.
#         .n8i ..,,,,,,,::,,,,.. tMMMMM@C:.................. .1Wn
#         7Uc. .:::,,,,,::,,,,..   i1t;,..................... .UEi
#         7C...::::::::::::,,,,..        ....................  vSi.
#         ;1;...,,::::::,.........       ..................    Yz:
#          v97,.........                                     .voC.
#           izAotX7777777777777777777777777777777777777777Y7n92:
#             .;CoIIIIIUAA666666699999ZZZZZZZZZZZZZZZZZZZZ6ov.
#
#                          !!! ATTENTION !!!
# DO NOT EDIT THIS FILE! THIS FILE CONTAINS THE DEFAULT VALUES FOR THE CON-
# FIGURATION! EDIT YOUR OWN CONFIG FILE (based on production.py or development.py or testing.py).
# AND DICTATE THE APP TO USE YOUR FILE WITH ENV VARIABLE:
# APP_SETTINGS='config.yourEnv.Config'
#
# Editing this file is done at your own risks, don't cry if doing that transforms your cat in an opossum.


def bool_env(var_name, default=False):
    test_val = os.getenv(var_name, default)
    if test_val in ("False", "false", "0", "no"):
        return False
    return bool(test_val)


class BaseConfig(object):
    """ Base configuration, pls dont edit me """

    # Debug and testing specific
    TESTING = bool_env("TESTING", False)
    DEBUG = bool_env("DEBUG", False)

    @property
    def TEMPLATES_AUTO_RELOAD(self):
        return self.DEBUG

    # WTForms CSRF
    WTF_CSRF_ENABLED = bool_env("WTF_CSRF_ENABLED", False)

    # Can users register
    REGISTRATION_ENABLED = bool_env("REGISTRATION_ENABLED", True)

    # Registration, same as upper
    @property
    def SECURITY_REGISTERABLE(self):
        return self.REGISTRATION_ENABLED

    # Secret key, you are supposed to generate one
    # Ex: `openssl rand -hex 42`
    SECRET_KEY = os.getenv("SECRET_KEY", None)
    # Ex: `openssl rand -hex 5`
    SECURITY_PASSWORD_SALT = os.getenv("SECURITY_PASSWORD_SALT", None)

    # Database stuff
    SQLALCHEMY_DATABASE_URI = os.getenv("SQLALCHEMY_DATABASE_URI", "postgresql+psycopg2://postgres@localhost/reel2bits")
    SQLALCHEMY_ECHO = bool_env("SQLALCHEMY_ECHO", False)
    # Thoses two shouldn't be touched
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    SQLALCHEMY_RECORD_QUERIES = True

    # Flask-Security stuff
    # Should users confirm theire email address ?
    SECURITY_CONFIRMABLE = bool_env("SECURITY_CONFIRMABLE", True)

    # We have an alternative way
    SECURITY_RECOVERABLE = False
    # Don't change or you will break things
    SECURITY_CHANGEABLE = True
    # Same or I bite you
    SECURITY_PASSWORD_HASH = "bcrypt"
    SECURITY_SEND_REGISTER_EMAIL = True
    SECURITY_SEND_PASSWORD_CHANGE_EMAIL = True
    SECURITY_SEND_PASSWORD_RESET_NOTICE_EMAIL = True

    # Backend default language
    BABEL_DEFAULT_LOCALE = os.getenv("BABEL_DEFAULT_LOCALE", "en")
    # Not sure this one has any effect...
    BABEL_DEFAULT_TIMEZONE = os.getenv("BABEL_DEFAULT_TIMEZONE", "UTC")

    # Uploads directories
    UPLOADS_DEFAULT_DEST = os.getenv("UPLOADS_DEFAULT_DEST", "/home/reel2bits/uploads")
    UPLOADED_SOUNDS_DEST = os.getenv("UPLOADED_SOUNDS_DEST", "/home/reel2bits/uploads/sounds")
    UPLOADED_ARTWORKALBUMS_DEST = os.getenv("UPLOADED_ARTWORKALBUMS_DEST", "/home/reel2bits/uploads/artwork_albums")
    UPLOADED_ARTWORKSOUNDS_DEST = os.getenv("UPLOADED_ARTWORKSOUNDS_DEST", "/home/reel2bits/uploads/artwork_sounds")
    UPLOADED_AVATARS_DEST = os.getenv("UPLOADED_AVATARS_DEST", "/home/reel2bits/uploads/avatars")

    # 33554432  256 megabytes
    # 67108864  512 megabytes
    # 134217728   1 gibabyte
    UPLOAD_TRACK_MAX_SIZE = os.getenv("UPLOAD_TRACK_MAX_SIZE", 67108864)

    # Where is audiowaveform located
    AUDIOWAVEFORM_BIN = os.getenv("AUDIOWAVEFORM_BIN", "/usr/local/bin/audiowaveform")

    # If using sentry
    SENTRY_DSN = os.getenv("SENTRY_DSN", None)

    # Broker setup for Celery, same redis base for both
    CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL", "redis://127.0.0.1:6379/0")
    CELERY_RESULT_BACKEND = os.getenv("CELERY_RESULT_BACKEND", "redis://127.0.0.1:6379/0")

    # ActivityPub stuff
    AP_ENABLED = bool_env("AP_ENABLED", False)

    @property
    def REEL2BITS_URL(self):
        return f"{self.REEL2BITS_PROTOCOL}://{self.REEL2BITS_HOSTNAME}"

    # We use some _external=True for url_for(), we need to have
    # the right scheme used
    @property
    def PREFERRED_URL_SCHEME(self):
        return self.REEL2BITS_PROTOCOL

    # or default=REEL2BITS_URL + "/front/"
    REEL2BITS_SPA_HTML = os.getenv("REEL2BITS_SPA_HTML", "../front/dist/index.html")

    @property
    def AP_DOMAIN(self):
        return self.REEL2BITS_HOSTNAME

    @property
    def BASE_URL(self):
        return f"https://{self.AP_DOMAIN}"

    # Sources of that instance, should be your repos if forked
    SOURCES_REPOSITORY_URL = os.getenv("SOURCES_REPOSITORY_URL", "https://github.com/reel2bits/reel2bits")

    # Mail setup
    MAIL_SERVER = os.getenv("MAIL_SERVER", "localhost")
    MAIL_PORT = os.getenv("MAIL_PORT", 25)
    MAIL_USE_TLS = bool_env("MAIL_USE_TLS", False)
    MAIL_USE_SSL = bool_env("MAIL_USE_SSL", False)
    MAIL_USERNAME = os.getenv("MAIL_USERNAME", None)
    MAIL_PASSWORD = os.getenv("MAIL_PASSWORD", None)

    @property
    def MAIL_DEFAULT_SENDER(self):
        return os.getenv("MAIL_DEFAULT_SENDER", f"postmaster@{self.AP_DOMAIN}")

    @property
    def SECURITY_EMAIL_SENDER(self):
        return os.getenv("MAIL_DEFAULT_SENDER", f"postmaster@{self.AP_DOMAIN}")

    SECURITY_EMAIL_SUBJECT_REGISTER = os.getenv("SECURITY_EMAIL_SUBJECT_REGISTER", "Welcome to reel2bits")

    # Old stuff while we still have parts of the frontend in the backend
    SECURITY_POST_LOGIN_VIEW = "/login?account_confirmed"
    SECURITY_POST_LOGOUT_VIEW = "/"

    # Don't touch
    SWAGGER_UI_DOC_EXPANSION = "list"

    SECURITY_CLI_USERS_NAME = False
    SECURITY_CLI_ROLES_NAME = False

    def post_load(self):
        self.resolve_hostnames()

    def resolve_hostnames(self):
        """
        This is not really practical, but having this is in a function is the only way of
        getting the right variables overriden by the config.xxx_secret.py files
        and then compute the right things with what have been given.
        """
        REEL2BITS_HOSTNAME_SUFFIX = os.getenv("REEL2BITS_HOSTNAME_SUFFIX", None)
        REEL2BITS_HOSTNAME_PREFIX = os.getenv("REEL2BITS_HOSTNAME_PREFIX", None)
        if REEL2BITS_HOSTNAME_PREFIX and REEL2BITS_HOSTNAME_SUFFIX:
            # we're in traefik case, in development
            self.REEL2BITS_HOSTNAME = f"{REEL2BITS_HOSTNAME_PREFIX}.{REEL2BITS_HOSTNAME_SUFFIX}"
            REEL2BITS_PROTOCOL = os.getenv("REEL2BITS_PROTOCOL", "https")
        else:
            if not hasattr(self, "REEL2BITS_HOSTNAME"):
                self.REEL2BITS_HOSTNAME = os.getenv("REEL2BITS_HOSTNAME", None)
            if self.REEL2BITS_HOSTNAME:
                REEL2BITS_PROTOCOL = os.getenv("REEL2BITS_PROTOCOL", "https")
            else:
                REEL2BITS_URL = os.getenv("REEL2BITS_URL")
                _parsed = urlsplit(REEL2BITS_URL)
                self.REEL2BITS_HOSTNAME = _parsed.netloc
                REEL2BITS_PROTOCOL = _parsed.scheme

        self.REEL2BITS_PROTOCOL = REEL2BITS_PROTOCOL.lower()
        self.REEL2BITS_HOSTNAME = self.REEL2BITS_HOSTNAME.lower()
        self.REEL2BITS_HOSTNAME_SUFFIX = REEL2BITS_HOSTNAME_SUFFIX
        self.REEL2BITS_HOSTNAME_PREFIX = REEL2BITS_HOSTNAME_PREFIX
